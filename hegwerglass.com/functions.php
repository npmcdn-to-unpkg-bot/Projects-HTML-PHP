<?php
/*
* Generated By Orbisius Child Theme Creator - your favorite plugin for Child Theme creation :)
* https://wordpress.org/plugins/orbisius-child-theme-creator/
*
* Unlike style.css, the functions.php of a child theme does not override its counterpart from the parent.
* Instead, it is loaded in addition to the parentâ€™s functions.php. (Specifically, it is loaded right before the parent theme's functions.php).
* Source: http://codex.wordpress.org/Child_Themes#Using_functions.php
*
* Be sure not to define functions, that already exist in the parent theme!
* A common pattern is to prefix function names with the (child) theme name.
* Also if the parent theme supports pluggable functions you can use function_exists( 'put_the_function_name_here' ) checks.
*/



remove_filter( 'the_content', 'wpautop' );

remove_filter( 'the_excerpt', 'wpautop' );

/*add_filter( 'woocommerce_product_add_to_cart_text', 'woo_archive_custom_cart_button_text' );    // 2.1 +

 

function woo_archive_custom_cart_button_text() {

 

        return __( 'Click Photo to Order', 'woocommerce' );

 

}*/







remove_action( 'woocommerce_before_shop_loop', 'woocommerce_catalog_ordering', 30 );

/** Remove Showing results functionality site-wide */

function woocommerce_result_count() {return;}





add_filter( 'woocommerce_product_tabs', 'wcs_woo_remove_reviews_tab', 98 );







    function wcs_woo_remove_reviews_tab($tabs) {







    unset($tabs['reviews']);







    return $tabs;







}





/*

add_filter('add_to_cart_redirect', 'themeprefix_add_to_cart_redirect');




/*



function themeprefix_add_to_cart_redirect() {



 global $woocommerce;



 $checkout_url = $woocommerce->cart->get_checkout_url();



 return $checkout_url;



}

*/



/**

  * Remove link wrapping main product image in single product view.

  * @param $html

  * @param $post_id

  * @return string

*/



function custom_unlink_single_product_image( $html, $post_id ) {

    return get_the_post_thumbnail( $post_id, apply_filters( 'single_product_large_thumbnail_size', 'shop_single' ) );

}



add_filter('woocommerce_single_product_image_html', 'custom_unlink_single_product_image', 10, 2); 


add_shortcode( 'view_carts_new', 'view_carts_new_func' ); 
function view_carts_new_func(){
	ob_start();
?>
<div class="view_cart_details">
<div class="view_values_vaert" style="margin-left:20px;background-image: url('<?php bloginfo('template_directory'); ?>/cart.png');background-repeat: no-repeat;float: left;font-size: 14px;height: 36px;line-height: 0px;padding-left: 20px;width: 44px;">
<?php echo sprintf (_n( '%d', '%d', WC()->cart->get_cart_contents_count() ), WC()->cart->get_cart_contents_count() ); ?></div> 
<a class="cart-contents" href="<?php echo WC()->cart->get_cart_url(); ?>" title="<?php _e( 'View your shopping cart' ); ?>">Total- <?php echo WC()->cart->get_cart_total(); ?></a> <a class="cart-contents button-show" href="<?php echo WC()->cart->get_cart_url(); ?>" title="<?php _e( 'View your shopping cart' ); ?>">view cart</a><div class="clearfix"></div></div><?php $om_message = ob_get_clean();return $om_message; } 
 


add_shortcode( 'wocomerce_product', 'wocomerce_product_func' ); 
function wocomerce_product_func(){ 
	ob_start();
?>
<div id="all_product_category">
<div >	
			<?php
			$i=1;
			 $wcatTerms = get_terms('product_cat', array('hide_empty' => 0, 'orderby' => 'ASC',  'parent' =>0)); //, 'exclude' => '17,77'
				foreach($wcatTerms as $wcatTerm) : 
				//removig general category 
				 if($wcatTerm->name == "Pumpkins"){} else if(($wcatTerm->name == "Vases")){}else{
					$wthumbnail_id = get_woocommerce_term_meta( $wcatTerm->term_id, 'thumbnail_id', true );
					$wimage = wp_get_attachment_url( $wthumbnail_id );
				?><ul><?php if($i==1) {	?><li>Short Product By Category</li><?php } ?>
				
					<li class="libreak"><?php if($wimage!=""):?><img src="<?php echo $wimage?>"><?php endif;?></li>
					<li> <a href="<?php echo get_term_link( $wcatTerm->slug, $wcatTerm->taxonomy ); ?>"><?php echo $wcatTerm->name; ?></a>
						<ul class="wsubcategs">
						<?php
						$wsubargs = array(
						   'hierarchical' => 1,
						   'show_option_none' => '',
						   'hide_empty' => 0,
						   'parent' => $wcatTerm->term_id,

						   'taxonomy' => 'product_cat'
						);
						$wsubcats = get_categories($wsubargs);
						foreach ($wsubcats as $wsc):?>
							<li><a href="<?php echo get_term_link( $wsc->slug, $wsc->taxonomy );?>"><?php echo $wsc->name;?></a></li>
						<?php 
						endforeach;
						}  
						?>  
						</ul>
					</li>
				</ul>
			<?php $i++;
				endforeach; 
			?>
		</div><div class="clearfix"></div></div>
        
<?php 
$om_messages = ob_get_clean();
return $om_messages;
} ?>
